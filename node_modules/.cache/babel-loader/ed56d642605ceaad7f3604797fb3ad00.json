{"ast":null,"code":"import _slicedToArray from\"C:\\\\Nikith\\\\stite\\\\eganikhith.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{useTable,useFilters,useSortBy}from\"react-table\";export default function Table(_ref){var columns=_ref.columns,data=_ref.data;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),filterInput=_useState2[0],setFilterInput=_useState2[1];var _useTable=useTable({columns:columns,data:data},useFilters,useSortBy),getTableProps=_useTable.getTableProps,getTableBodyProps=_useTable.getTableBodyProps,headerGroups=_useTable.headerGroups,rows=_useTable.rows,prepareRow=_useTable.prepareRow,setFilter=_useTable.setFilter;var handleFilterChange=function handleFilterChange(e){var value=e.target.value||undefined;setFilter(\"show.name\",value);setFilterInput(value);};// Render the UI for table\nreturn React.createElement(React.Fragment,null,React.createElement(\"input\",{value:filterInput,onChange:handleFilterChange,placeholder:\"Search title\"}),React.createElement(\"table\",getTableProps(),React.createElement(\"thead\",null,headerGroups.map(function(headerGroup){return React.createElement(\"tr\",headerGroup.getHeaderGroupProps(),headerGroup.headers.map(function(column){return React.createElement(\"th\",Object.assign({},column.getHeaderProps(column.getSortByToggleProps()),{className:column.isSorted?column.isSortedDesc?\"sort-desc\":\"sort-asc\":\"\"}),column.render(\"Header\"));}));})),React.createElement(\"tbody\",getTableBodyProps(),rows.map(function(row,i){prepareRow(row);return React.createElement(\"tr\",row.getRowProps(),row.cells.map(function(cell){return React.createElement(\"td\",cell.getCellProps(),cell.render(\"Cell\"));}));}))));}","map":{"version":3,"sources":["C:\\Nikith\\stite\\eganikhith.github.io\\src\\Table.js"],"names":["React","useState","useTable","useFilters","useSortBy","Table","columns","data","filterInput","setFilterInput","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setFilter","handleFilterChange","e","value","target","undefined","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","render","row","i","getRowProps","cells","cell","getCellProps"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,QAAT,CAAmBC,UAAnB,CAA+BC,SAA/B,KAAgD,aAAhD,CAEA,cAAe,SAASC,CAAAA,KAAT,MAAkC,IAAjBC,CAAAA,OAAiB,MAAjBA,OAAiB,CAARC,IAAQ,MAARA,IAAQ,eACTN,QAAQ,CAAC,EAAD,CADC,wCACxCO,WADwC,eAC3BC,cAD2B,6BAU3CP,QAAQ,CACV,CACEI,OAAO,CAAPA,OADF,CAEEC,IAAI,CAAJA,IAFF,CADU,CAKVJ,UALU,CAMVC,SANU,CAVmC,CAI7CM,aAJ6C,WAI7CA,aAJ6C,CAK7CC,iBAL6C,WAK7CA,iBAL6C,CAM7CC,YAN6C,WAM7CA,YAN6C,CAO7CC,IAP6C,WAO7CA,IAP6C,CAQ7CC,UAR6C,WAQ7CA,UAR6C,CAS7CC,SAT6C,WAS7CA,SAT6C,CAmB/C,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,CAAC,CAAI,CAC9B,GAAMC,CAAAA,KAAK,CAAGD,CAAC,CAACE,MAAF,CAASD,KAAT,EAAkBE,SAAhC,CACAL,SAAS,CAAC,WAAD,CAAcG,KAAd,CAAT,CACAT,cAAc,CAACS,KAAD,CAAd,CACD,CAJD,CAMA;AACA,MACE,yCACE,6BACE,KAAK,CAAEV,WADT,CAEE,QAAQ,CAAEQ,kBAFZ,CAGE,WAAW,CAAE,cAHf,EADF,CAME,4BAAWN,aAAa,EAAxB,CACE,iCACGE,YAAY,CAACS,GAAb,CAAiB,SAAAC,WAAW,QAC3B,0BAAQA,WAAW,CAACC,mBAAZ,EAAR,CACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwB,SAAAI,MAAM,QAC7B,2CACMA,MAAM,CAACC,cAAP,CAAsBD,MAAM,CAACE,oBAAP,EAAtB,CADN,EAEE,SAAS,CACPF,MAAM,CAACG,QAAP,CACIH,MAAM,CAACI,YAAP,CACE,WADF,CAEE,UAHN,CAII,EAPR,GAUGJ,MAAM,CAACK,MAAP,CAAc,QAAd,CAVH,CAD6B,EAA9B,CADH,CAD2B,EAA5B,CADH,CADF,CAqBE,4BAAWnB,iBAAiB,EAA5B,CACGE,IAAI,CAACQ,GAAL,CAAS,SAACU,GAAD,CAAMC,CAAN,CAAY,CACpBlB,UAAU,CAACiB,GAAD,CAAV,CACA,MACE,0BAAQA,GAAG,CAACE,WAAJ,EAAR,CACGF,GAAG,CAACG,KAAJ,CAAUb,GAAV,CAAc,SAAAc,IAAI,CAAI,CACrB,MACE,0BAAQA,IAAI,CAACC,YAAL,EAAR,CAA8BD,IAAI,CAACL,MAAL,CAAY,MAAZ,CAA9B,CADF,CAGD,CAJA,CADH,CADF,CASD,CAXA,CADH,CArBF,CANF,CADF,CA6CD","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useTable, useFilters, useSortBy } from \"react-table\";\r\n\r\nexport default function Table({ columns, data }) {\r\n  const [filterInput, setFilterInput] = useState(\"\");\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    setFilter\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data\r\n    },\r\n    useFilters,\r\n    useSortBy\r\n  );\r\n\r\n  const handleFilterChange = e => {\r\n    const value = e.target.value || undefined;\r\n    setFilter(\"show.name\", value);\r\n    setFilterInput(value);\r\n  };\r\n\r\n  // Render the UI for table\r\n  return (\r\n    <>\r\n      <input\r\n        value={filterInput}\r\n        onChange={handleFilterChange}\r\n        placeholder={\"Search title\"}\r\n      />\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th\r\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                  className={\r\n                    column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? \"sort-desc\"\r\n                        : \"sort-asc\"\r\n                      : \"\"\r\n                  }\r\n                >\r\n                  {column.render(\"Header\")}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}